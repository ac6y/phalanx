apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mobu.fullname" . }}
  labels:
    {{- include "mobu.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "mobu.selectorLabels" . | nindent 6 }}
  strategy:
    type: "Recreate"
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mobu.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: {{ .Chart.Name }}
          env:
            {{- if .Values.config.slackAlerts }}
            - name: "MOBU_ALERT_HOOK"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mobu.fullname" . }}-secret
                  key: "ALERT_HOOK"
            {{- end }}
            {{- if .Values.config.autostart }}
            - name: "MOBU_AUTOSTART_PATH"
              value: "/etc/mobu/autostart.yaml"
            {{- end }}
            {{- if .Values.config.github }}
            - name: "MOBU_GITHUB_CONFIG_PATH"
              value: "/etc/mobu/github-config.yaml"
            {{- end }}
            - name: "MOBU_ENVIRONMENT_URL"
              value: {{ .Values.global.baseUrl }}
            - name: "MOBU_GAFAELFAWR_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mobu.fullname" . }}-gafaelfawr-token
                  key: "token"
            {{- if .Values.config.githubRefreshAppEnabled }}
            - name: "MOBU_GITHUB_REFRESH_APP_ENABLED"
              value: "true"
            - name: "MOBU_GITHUB_REFRESH_APP_WEBHOOK_SECRET"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mobu.fullname" . }}-secret
                  key: "github-refresh-app-webhook-secret"
            {{- end}}
            {{- if .Values.config.githubCiAppEnabled }}
            - name: "MOBU_GITHUB_CI_APP_ENABLED"
              value: "true"
            - name: "MOBU_GITHUB_CI_APP_ID"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mobu.fullname" . }}-secret
                  key: "github-ci-app-id"
            - name: "MOBU_GITHUB_CI_APP_PRIVATE_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mobu.fullname" . }}-secret
                  key: "github-ci-app-private-key"
            - name: "MOBU_GITHUB_CI_APP_WEBHOOK_SECRET"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mobu.fullname" . }}-secret
                  key: "github-ci-app-webhook-secret"
            {{- end}}
            {{- if .Values.config.github_config }}
            - name: "MOBU_GITHUB_CONFIG_PATH"
              value: "/etc/mobu/github-config.yaml"
            {{- end}}
            - name: "MOBU_PATH_PREFIX"
              value: {{ .Values.config.pathPrefix | quote }}
            {{- if .Values.config.debug }}
            - name: "MOBU_LOGGING_PROFILE"
              value: "development"
            - name: "MOBU_LOG_LEVEL"
              value: "DEBUG"
            {{- else }}
            - name: "MOBU_LOGGING_PROFILE"
              value: "production"
            {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          ports:
            - name: "http"
              containerPort: 8080
              protocol: "TCP"
          readinessProbe:
            httpGet:
              path: "/"
              port: "http"
            timeoutSeconds: 10
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: "config"
              mountPath: "/etc/mobu"
              readOnly: true
            - name: "tmp"
              mountPath: "/tmp"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      volumes:
        - name: "config"
          projected:
            sources:
            {{- if .Values.config.autostart }}
            - configMap:
                name: {{ include "mobu.fullname" . }}-autostart
                items:
                  - key: autostart.yaml
                    path: autostart.yaml
            {{- end }}
            {{- if .Values.config.github }}
            - configMap:
                name: {{ include "mobu.fullname" . }}-github-config
                items:
                  - key: github-config.yaml
                    path: github-config.yaml
            {{- end }}
        - name: "tmp"
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
