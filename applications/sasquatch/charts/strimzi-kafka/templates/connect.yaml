{{- if .Values.connect.enabled }}
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: {{ .Values.cluster.name }}
  annotations:
    # Use Connect REST API to configure connectors
    strimzi.io/use-connector-resources: "false"
spec:
  replicas: {{ .Values.connect.replicas }}
  bootstrapServers: {{ .Values.cluster.name }}-kafka-bootstrap:9093
  tls:
    trustedCertificates:
      - secretName: {{ .Values.cluster.name }}-cluster-ca-cert
        certificate: ca.crt
  authentication:
    type: tls
    certificateAndKey:
      secretName: {{ .Values.cluster.name }}-connect
      certificate: user.crt
      key: user.key
  externalConfiguration:
    env:
      - name: PGPASSWORD
        valueFrom:
          secretKeyRef:
            name: sasquatch
            key: connect-postgres-password
      - name: PG_JDBC_URL
        valueFrom:
          configMapKeyRef:
            name: sasquatch-connect-postgres
            key: jdbcUrl
      - name: PGUSER
        valueFrom:
          configMapKeyRef:
            name: sasquatch-connect-postgres
            key: jdbcUser
  config:
    group.id: {{ .Values.cluster.name }}-connect
    offset.storage.topic: {{ .Values.cluster.name }}-connect-offsets
    config.storage.topic: {{ .Values.cluster.name }}-connect-configs
    status.storage.topic: {{ .Values.cluster.name }}-connect-status
    # -1 means it will use the default replication factor configured in the broker
    config.storage.replication.factor: -1
    offset.storage.replication.factor: -1
    status.storage.replication.factor: -1
    {{- range $key, $value := .Values.connect.config }}
    {{ $key }}: {{ $value }}
    {{- end }}
    key.converter.schema.registry.url: http://sasquatch-schema-registry.sasquatch:8081
    value.converter: io.confluent.connect.avro.AvroConverter
    value.converter.schemas.enable: true
    value.converter.schema.registry.url: http://sasquatch-schema-registry.sasquatch:8081
    request.timeout.ms: 120000
  build:
    output:
      type: docker
      image: {{ .Values.connect.image | quote }}
      pushSecret: sasquatch-connect-push-secret
    plugins:
      - name: confluent-jdbc
        artifacts:
          - type: jar
            url: {{ .Values.connect.jdbcConnector.url }}
            sha512sum: {{ .Values.connect.jdbcConnector.sha512sum }}
  resources:
    requests:
      cpu: "2"
      memory: 4Gi
    limits:
      cpu: "8"
      memory: 24Gi
  jvmOptions:
    "-Xmx": "8g"
    "-Xms": "8g"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sasquatch-connect-postgres
data:
  jdbcUrl: {{ .Values.connect.postgres.jdbcUrl | quote }}
  jdbcUser: {{ .Values.connect.postgres.jdbcUser | quote }}
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: {{ .Values.cluster.name }}-connect
  labels:
    strimzi.io/cluster: {{ .Values.cluster.name }}
spec:
  authentication:
    type: tls
  authorization:
    type: simple
    acls:
      - resource:
          type: group
          name: {{ .Values.cluster.name }}-connect
        operation: Read
      - resource:
          type: group
          name: "*"
          patternType: literal
        operation: All
      - resource:
          type: topic
          name: "*"
          patternType: literal
        type: allow
        host: "*"
        operation: All
  quotas:
    producerByteRate: 1073741824
    consumerByteRate: 1073741824
    requestPercentage: 90
    controllerMutationRate: 1000
{{- range $key, $value := .Values.connectors }}
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: {{ $value.name }}
  labels:
    strimzi.io/cluster: {{ .Values.cluster.name }}
spec:
  class: {{ default "io.confluent.connect.jdbc.JdbcSinkConnector" $value.class }}
  tasksMax: 2
  config:
    topics: {{ $value.config.topics }}
    table.name.format: {{ $value.config.table_name_format }}
    connection.url: "$PG_JDBC_URL"
    connection.user: "$PGUSER"
    connection.password: "$PGPASSWORD"
    insert.mode: {{ default "upsert" $value.config.insert_mode }}
    pk.mode: {{ default "record_key" $value.config.pk_mode }}
    pk.fields: {{ $value.config.pk_fields }}
{{- end }}
{{- end }}
