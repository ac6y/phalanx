# Configuration of Influx endpoint to receive monitoring data.
config:
  # -- Hostname for the singleton InfluxDBv2 collection point
  influxdbHostname: "monitoring.lsst.cloud"
  # -- InfluxDBv2 organization
  influxdbOrg: "square"

  # -- Use prometheus config to specify all Prometheus endpoints on services
  prometheus:
    argocd:
      application_controller: "http://argocd-application-controller-metrics.argocd.svc:8082/metrics"
      notifications_controller: "http://argocd-notifications-controller-metrics.argocd.svc:9001/metrics"
      # redis: "http://argocd-redis-metrics.argocd.svc:9121/metrics"
      repo_server: "http://argocd-repo-server-metrics.argocd.svc:8084/metrics"
      server: "http://argocd-server-metrics.argocd.svc:8083/metrics"
    nublado:
      hub: "http://hub.nublado:8081/metrics"
    ingress-nginx:
      controller: "http://ingress-nginx-controller-metrics.ingress-nginx:10254/metrics"
    monitoring:
      influxdb2: "https://monitoring.lsst.cloud/metrics"
# InfluxDB v2 server component.  Soon to be replaced with Influx DB v3.
influxdb2:
  # -- InfluxDB2 admin user; uses admin-password/admin-token keys from
  # secret.
  adminUser:
    # -- InfluxDB internal organization
    organization: "square"

    # -- Bucket to dump raw monitoring data into
    bucket: "monitoring_raw_"

    # -- User name
    user: "admin"

    # -- How long to keep data
    retention_policy: "30d"

    # -- Where we store secrets to run the server
    existingSecret: monitoring

  # -- InfluxDB2 ingress configuration.
  ingress:
    # Instead of the provided ingress, we will instead define our own
    # ingress to route to influxdb2 (and chronograf, if enabled) and use it.
    enabled: false

  startupProbe:
    # -- Whether to enable a startup probe
    enabled: true

    # -- How long to wait before checking the first time
    initialDelaySeconds: 30

    # -- Period between checking whether InfluxDB has started
    periodSeconds: 10

    # -- Number of checks to conclude whether InfluxDB won't start.  High
    # to allow up to 10 minutes for startup, because checking many
    # shards can be slow.
    failureThreshold: 60

  # -- InfluxDB2 liveness probe.
  livenessProbe:
    # -- Period between checks for whether InfluxDB is still alive
    periodSeconds: 10

    # -- Number of checks to conclude whether InfluxDB has died
    failureThreshold: 10

  # -- Resource limits and requests for the InfluxDB server instance
  # @default -- See `values.yaml`
  resources:
    limits:
      cpu: 4.0
      memory: 30Gi
    requests:
      cpu: 1.0
      memory: 1Gi

# Chronograf provides a UI for analyzing the data in Influx.  Unlike the
# native InfluxDBv2 visualizer, it is capable of doing OIDC authentication.
chronograf:
  ## Image Settings
  ##
  # -- chronograf image settings
  image:
    repository: "quay.io/influxdb/chronograf"
    tag: 1.10.3
    pullPolicy: IfNotPresent

  ## Specify a service type
  ## ClusterIP is default
  ## ref: http://kubernetes.io/docs/user-guide/services/
  ##
  # -- Chronograf service
  # @default -- 1 replica, ClusterIP
  service:
    replicas: 1
    type: ClusterIP

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  # -- Chronograf resource requests/limits
  # @default -- 1Gi/1CPU request, 30Gi/4CPU limit
  resources:
    requests:
      memory: 1024Mi
      cpu: 1
    limits:
      memory: 30Gi
      cpu: 4

  # -- Chronograf ingress
  # @default -- disabled; must be enabled and configured for each site
  ingress:
    enabled: false
    tls: false
    hostname: ""
    className: "nginx"
    path: /chronograf(/|$)

  ## Enable OAuth
  oauth:
    # -- Enable Chronograf oauth
    # Never enable it: it breaks the deployment because it's expecting a static
    # TOKEN_SECRET.  Instead, to get oauth working, leave this setting as-is
    # and just configure all the correct environment variables (see below).
    enabled: false

  # -- Environment for chronograf
  # @default -- stock settings for SQuaRE Phalanx deployment
  env:
    BASE_PATH: "/chronograf"
    CUSTOM_AUTO_REFRESH: "1s=1000"
    HOST_PAGE_DISABLED: true
    INFLUXDB_URL: "https://monitoring.lsst.cloud"
    INFLUXDB_ORG: "square"

  # -- Chronograf will read environment variables from this secret
  envFromSecret: monitoring

  # -- Chronograf update strategy
  updateStrategy:
    type: Recreate

# Cronjobs to handle bucket and task creation for alert generation.
cronjob:
  # -- image for monitoring-related cronjobs
  image:
    # -- repository for rubin-influx-tools, which supplies tools and dashboards
    repository: ghcr.io/lsst-sqre/rubin-influx-tools
    # -- tag for rubin-influx-tools
    # @default -- the appVersion of the chart
    tag: ""
    # -- imagePullPolicy for cronjobs
    pullPolicy: "IfNotPresent"

  # -- set to true to enable debug logging
  debug: false

  schedule:
    # -- bucketmaker schedule
    bucketmaker: "*/15 * * * *"
    # -- bucketmapper schedule
    bucketmapper: "3-59/15 * * * *"
    # -- taskmaker schedule
    taskmaker: "6-59/15 * * * *"

ingress:
  # -- Additional annotations to add to the ingress
  annotations: {}

global:
  # -- services enabled in this RSP instance
  # @default -- Set by Argo CD
  enabledServices: ""

  # -- Host name for instance identification
  # @default -- Set by Argo CD
  host: ""

  # -- Base path for Vault secrets
  # @default -- Set by Argo CD
  vaultSecretsPath: ""
