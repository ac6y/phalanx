apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaBridge
metadata:
  name: {{ .Values.cluster.name }}
spec:
  replicas: 1
  bootstrapServers: {{ .Values.cluster.name }}-kafka-bootstrap:9093
  http:
    port: 8080
  tls:
    trustedCertificates:
      - secretName: {{ .Values.cluster.name }}-cluster-ca-cert
        certificate: ca.crt
  authentication:
    type: tls
    certificateAndKey:
      secretName: {{ .Values.cluster.name }}-bridge
      certificate: user.crt
      key: user.key
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: {{ .Values.cluster.name }}-bridge
spec:
  ingressClassName: nginx
  rules:
    - host: {{ required "global.host must be set" .Values.global.host | quote }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Values.cluster.name }}-bridge-service
                port:
                  number: 8080
            path: /{{ .Values.cluster.name }}-bridge(/|$)(.*)
            pathType: Prefix
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: {{ .Values.cluster.name }}-bridge
  labels:
    strimzi.io/cluster: {{ .Values.cluster.name }}
spec:
  authentication:
    type: tls
  authorization:
    type: simple
    acls:
      - resource:
          type: group
          name: "*"
          patternType: literal
        operation: All
      - resource:
          type: topic
          name: "object-table-core-metrics"
          patternType: literal
        type: allow
        host: "*"
        operation: All
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: object-table-core-metrics
  labels:
    strimzi.io/cluster: {{ .Values.cluster.name }}
spec:
  partitions: 1
  replicas: 3
